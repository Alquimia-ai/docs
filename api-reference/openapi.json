{
  "openapi": "3.1.0",
  "info": {
    "title": "Alquimia Runtime API",
    "description": "API for interacting with dynamic AI assistants in Alquimia Runtime",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://runtime.apps.alquimiaai.hostmydemo.online"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/infer/chat/{assistant_id}": {
      "post": {
        "description": "Start a conversation with a specific AI assistant",
        "parameters": [
          {
            "name": "assistant_id",
            "in": "path",
            "description": "Unique identifier of the assistant to chat with",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Conversation data to start",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful assistant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Assistant not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/chat/{assistant_id}": {
      "get": {
        "description": "Get detailed configuration information for a specific assistant",
        "parameters": [
          {
            "name": "assistant_id",
            "in": "path",
            "description": "Unique identifier of the assistant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assistant configuration retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistantConfig"
                }
              }
            }
          },
          "404": {
            "description": "Assistant not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChatRequest": {
        "required": [
          "query",
          "session_id"
        ],
        "type": "object",
        "properties": {
          "query": {
            "description": "The user's query or message",
            "type": "string",
            "example": "Your query"
          },
          "session_id": {
            "description": "Unique identifier for the conversation session",
            "type": "string",
            "example": "your-session-id"
          },
          "attachments": {
            "description": "Optional attachments for the conversation",
            "type": "array",
            "items": {
              "type": "object"
            },
            "default": []
          }
        }
      },
      "ChatResponse": {
        "type": "object",
        "properties": {
          "response": {
            "description": "Assistant's response",
            "type": "string"
          },
          "session_id": {
            "description": "Session identifier",
            "type": "string"
          },
          "timestamp": {
            "description": "Response timestamp",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AssistantConfig": {
        "type": "object",
        "properties": {
          "stream_id": {
            "description": "Unique identifier for the conversation stream",
            "type": "string"
          },
          "control_id": {
            "description": "Control identifier for managing the conversation",
            "type": "string"
          },
          "query": {
            "description": "The original query that triggered this configuration",
            "type": "string"
          },
          "parameters": {
            "description": "Additional parameters for the assistant",
            "type": "object",
            "properties": {
              "tools": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "extra_data": {
                "type": "object"
              }
            }
          },
          "config": {
            "description": "Assistant configuration details",
            "type": "object",
            "properties": {
              "nickname": {
                "description": "Display name of the assistant",
                "type": "string"
              },
              "description": {
                "description": "Description of the assistant's purpose",
                "type": "string"
              },
              "tags": {
                "description": "Categorization tags for the assistant",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "requires_human_layer": {
                "description": "Whether the assistant requires human intervention",
                "type": "boolean"
              },
              "assistant_id": {
                "description": "Unique identifier of the assistant",
                "type": "string"
              },
              "integrations": {
                "description": "External integrations configuration",
                "type": "object"
              },
              "tools": {
                "description": "Available tools for the assistant",
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "agents": {
                "description": "Sub-agents configuration",
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "experts": {
                "description": "Expert configurations",
                "type": "object"
              },
              "dante": {
                "description": "Dante AI model configuration",
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "object",
                    "properties": {
                      "max_iterations": {
                        "description": "Maximum number of iterations",
                        "type": "integer"
                      },
                      "max_iteration_volume": {
                        "description": "Maximum volume per iteration",
                        "type": "integer"
                      },
                      "collection_id": {
                        "description": "Knowledge collection identifier",
                        "type": "string"
                      },
                      "system_prompt": {
                        "description": "System prompt template",
                        "type": "string"
                      },
                      "custom_clauses": {
                        "description": "Dynamic personality and behavior configuration",
                        "type": "object",
                        "properties": {
                          "identity": {
                            "description": "Assistant identity definition",
                            "type": "string"
                          },
                          "personality": {
                            "description": "Assistant personality traits",
                            "type": "string"
                          },
                          "purpose": {
                            "description": "Assistant's primary purpose",
                            "type": "string"
                          },
                          "rules": {
                            "description": "Behavior rules and guidelines",
                            "type": "string"
                          },
                          "knowledge": {
                            "description": "Knowledge domain definition",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "AI model type",
                        "type": "string"
                      },
                      "connector": {
                        "description": "Language model connector configuration",
                        "type": "object"
                      },
                      "embeddings": {
                        "description": "Embeddings model configuration",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "attachments": {
            "description": "File attachments for the conversation",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "depth": {
            "description": "Conversation depth level",
            "type": "integer"
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}