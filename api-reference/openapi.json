{
  "openapi": "3.1.0",
  "info": {
    "title": "Alquimia Runtime API",
    "description": "API for interacting with dynamic AI assistants in Alquimia Runtime",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://runtime.apps.alquimiaai.hostmydemo.online"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/infer/chat/{assistant_id}": {
      "post": {
        "description": "Start a conversation with a specific AI assistant",
        "parameters": [
          {
            "name": "assistant_id",
            "in": "path",
            "description": "Unique identifier of the assistant to chat with",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Conversation data to start",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Assistant configuration and conversation setup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistantConfig"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Assistant not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stream/{stream_id}": {
      "get": {
        "description": "Stream real-time processing chunks from an AI assistant using Server-Sent Events (SSE)",
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "description": "Unique identifier of the conversation stream (obtained from POST /infer/chat/{assistant_id})",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Server-Sent Events stream with processing chunks",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/StreamResponse"
                }
              }
            }
          },
          "404": {
            "description": "Stream not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChatRequest": {
        "required": [
          "query",
          "session_id"
        ],
        "type": "object",
        "properties": {
          "query": {
            "description": "The user's query or message",
            "type": "string",
            "example": "Your query"
          },
          "session_id": {
            "description": "Unique identifier for the conversation session",
            "type": "string",
            "example": "your-session-id"
          },
          "attachments": {
            "description": "Optional attachments for the conversation",
            "type": "array",
            "items": {
              "type": "object"
            },
            "default": []
          }
        }
      },
      "AssistantConfig": {
        "type": "object",
        "properties": {
          "stream_id": {
            "description": "Unique identifier for the conversation stream",
            "type": "string"
          },
          "control_id": {
            "description": "Control identifier for managing the conversation",
            "type": "string"
          },
          "query": {
            "description": "The original query that triggered this configuration",
            "type": "string"
          },
          "parameters": {
            "description": "Additional parameters for the assistant",
            "type": "object",
            "properties": {
              "tools": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "extra_data": {
                "type": "object"
              }
            }
          },
          "config": {
            "description": "Assistant configuration details",
            "type": "object",
            "properties": {
              "nickname": {
                "description": "Display name of the assistant",
                "type": "string"
              },
              "description": {
                "description": "Description of the assistant's purpose",
                "type": "string"
              },
              "tags": {
                "description": "Categorization tags for the assistant",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "requires_human_layer": {
                "description": "Whether the assistant requires human intervention",
                "type": "boolean"
              },
              "assistant_id": {
                "description": "Unique identifier of the assistant",
                "type": "string"
              },
              "integrations": {
                "description": "External integrations configuration",
                "type": "object"
              },
              "tools": {
                "description": "Available tools for the assistant",
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "agents": {
                "description": "Sub-agents configuration",
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "experts": {
                "description": "Expert configurations",
                "type": "object"
              },
              "dante": {
                "description": "Dante AI model configuration (dynamic, varies by assistant)",
                "type": "object"
              }
            }
          },
          "attachments": {
            "description": "File attachments for the conversation",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "depth": {
            "description": "Conversation depth level",
            "type": "integer"
          }
        }
      },
      "StreamResponse": {
        "type": "object",
        "properties": {
          "stream_id": {
            "description": "Unique identifier for the conversation stream",
            "type": "string"
          },
          "response": {
            "description": "Assistant inference response",
            "type": "object",
            "properties": {
              "event_class": {
                "description": "Type of event (e.g., 'AssistantInferenceResponse')",
                "type": "string"
              },
              "control_id": {
                "description": "Control identifier for managing the conversation",
                "type": "string"
              },
              "data": {
                "description": "Response data containing content and metadata",
                "type": "object",
                "properties": {
                  "content": {
                    "description": "The assistant's response content",
                    "type": "string"
                  },
                  "additional_kwargs": {
                    "description": "Additional keyword arguments",
                    "type": "object"
                  },
                  "response_metadata": {
                    "description": "Metadata about the response generation",
                    "type": "object",
                    "properties": {
                      "token_usage": {
                        "description": "Token usage statistics",
                        "type": "object",
                        "properties": {
                          "completion_tokens": {
                            "type": "integer"
                          },
                          "prompt_tokens": {
                            "type": "integer"
                          },
                          "total_tokens": {
                            "type": "integer"
                          },
                          "completion_time": {
                            "type": "number"
                          },
                          "prompt_time": {
                            "type": "number"
                          },
                          "queue_time": {
                            "type": "number"
                          },
                          "total_time": {
                            "type": "number"
                          }
                        }
                      },
                      "model_name": {
                        "description": "Name of the AI model used",
                        "type": "string"
                      },
                      "system_fingerprint": {
                        "description": "System fingerprint for the model",
                        "type": "string"
                      },
                      "finish_reason": {
                        "description": "Reason why the response generation finished",
                        "type": "string"
                      },
                      "logprobs": {
                        "description": "Log probabilities (if available)",
                        "type": ["object", "null"]
                      }
                    }
                  },
                  "type": {
                    "description": "Type of response (e.g., 'ai')",
                    "type": "string"
                  },
                  "id": {
                    "description": "Unique identifier for the response",
                    "type": "string"
                  },
                  "example": {
                    "description": "Whether this is an example response",
                    "type": "boolean"
                  },
                  "tool_calls": {
                    "description": "Tool calls made by the assistant",
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "invalid_tool_calls": {
                    "description": "Invalid tool calls",
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "usage_metadata": {
                    "description": "Usage metadata for the response",
                    "type": "object",
                    "properties": {
                      "input_tokens": {
                        "type": "integer"
                      },
                      "output_tokens": {
                        "type": "integer"
                      },
                      "total_tokens": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "Status of the response (e.g., 'success')",
                "type": "string"
              },
              "date_submitted": {
                "description": "Timestamp when the response was submitted",
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "experts": {
            "description": "Expert responses",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "thinkings": {
            "description": "Thinking process and reasoning",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "tools_output": {
            "description": "Output from tool executions",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "pending_tools_to_approve": {
            "description": "Tools waiting for approval",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "tools_pending_execution": {
            "description": "Tools waiting to be executed",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "errors": {
            "description": "Any errors that occurred during processing",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "event_class": {
            "description": "Type of event (e.g., 'AssistantInferenceCommand')",
            "type": "string"
          },
          "date_submitted": {
            "description": "Timestamp when the event was submitted",
            "type": "string",
            "format": "date-time"
          },
          "control_id": {
            "description": "Control identifier for managing the conversation",
            "type": "string"
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}